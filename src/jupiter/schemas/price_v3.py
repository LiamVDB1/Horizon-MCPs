# generated by datamodel-codegen:
#   filename:  price.v3.yaml

from __future__ import annotations

from typing import Dict, Optional

from pydantic import BaseModel, ConfigDict, RootModel


class FieldDatamodelCodeGeneratorRootSpecialGetParametersQuery(BaseModel):
    ids: str


class FieldDatamodelCodeGeneratorRootSpecialGetResponse1(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    blockId: Optional[int] = None
    decimals: int
    usdPrice: float
    priceChange24h: Optional[float] = None


class FieldDatamodelCodeGeneratorRootSpecialGetResponse(
    RootModel[Optional[Dict[str, FieldDatamodelCodeGeneratorRootSpecialGetResponse1]]]
):
    root: Optional[Dict[str, FieldDatamodelCodeGeneratorRootSpecialGetResponse1]] = None
    """
    Token addresses as keys
    """
